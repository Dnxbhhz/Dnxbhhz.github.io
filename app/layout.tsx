import type { Metadata } from 'next'
import { Geist, Geist_Mono } from 'next/font/google'
import './globals.css'
import { ThemeProvider } from '@/components/theme-provider'
import Header from '@/app/components/Header'
import BusuanziReporter from '@/components/BusuanziReporter'
import { Suspense } from 'react'
import BusuanziScript from '@/components/BusuanziScript'

declare global {
  interface Window {
    Busuanzi?: { fetch: () => void }
  }
}
import siteMetadata from '@/data/siteMetadata'

const geistSans = Geist({
  variable: '--font-geist-sans',
  subsets: ['latin'],
})

const geistMono = Geist_Mono({
  variable: '--font-geist-mono',
  subsets: ['latin'],
})

export const metadata: Metadata = {
  title: {
    default: siteMetadata.headerTitle,
    template: `%s | ${siteMetadata.headerTitle}`,
  },
  description: 'Generated by create next app',
  icons: {
    icon: [
      {
        url: '/favicon-light.svg',
        media: '(prefers-color-scheme: light)',
        type: 'image/svg+xml',
      },
      {
        url: '/favicon-dark.svg',
        media: '(prefers-color-scheme: dark)',
        type: 'image/svg+xml',
      },
      { url: '/favicon.png', type: 'image/png' },
    ],
  },
}

export default function RootLayout({
  children,
}: {
  children: React.ReactNode
}) {
  const isProd = process.env.NODE_ENV === 'production'
  return (
    <html lang="en" suppressHydrationWarning={true} className="h-full">
      <head>{isProd && <BusuanziScript />}</head>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased flex h-full flex-col`}>
        <ThemeProvider
          attribute="class"
          defaultTheme="system"
          enableSystem
          disableTransitionOnChange>
          <Header />
          <main className="pt-22 w-full">{children}</main>
        </ThemeProvider>
        <Suspense fallback={null}>
          <BusuanziReporter />
        </Suspense>
      </body>
    </html>
  )
}
